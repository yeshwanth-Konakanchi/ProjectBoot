<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     					http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<import resource="classpath:transaction-test.xml" />
	
	<bean id="customerDAO" class="com.zenolocity.training.spring.jdbctemplate.JdbcTemplateCustomerDAO">
        <property name="dataSource" ref="testDataSource" />
    </bean>
    
	<bean id="transactionTestService" class="com.zenolocity.training.spring.transactions.declarative.xml.XmlTransactionTestService">
	    <property name="customerDao" ref="customerDAO" />
	</bean>
		
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="addCustomerThatThrowsExpectedException" propagation="REQUIRES_NEW" no-rollback-for="com.zenolocity.training.spring.transactions.ExpectedException" />
			<tx:method name="addCustomerThatThrowsUnexpectedException" propagation="REQUIRES_NEW" />
			<tx:method name="addCustomerWithoutAnyException" propagation="REQUIRES_NEW" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="xmlTransactionTestServiceOperation"
			expression="execution(* com.zenolocity.training.spring.transactions.declarative.xml.XmlTransactionTestService.*(..))" />
			
		<aop:advisor advice-ref="txAdvice" pointcut-ref="xmlTransactionTestServiceOperation" />
	</aop:config>
	
</beans>